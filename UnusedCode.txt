def criaCabecalho (self, textoCabecalho, alinhamento):  # não foi usado.
        
        section = self.document.sections[0]
        header = section.header
        # header = section.first_page_header  # não foi usado.

        cabecalho = header.paragraphs[0]
        cabecalho.text = textoCabecalho  # Para textos com quebra de linha usar """ """.
        cabecalho.alignment = alinhamento  # Siga a docstring do método textoSimples()
        cabecalho_styles = self.document.styles["Header"]
        cabecalho_styles.font.name = 'Arial'
        cabecalho_styles.font.size = Pt(12)
        
    def criaTitulo (self, textoTitulo, anexo):  # não foi usado.

        titulo = self.document.add_paragraph()
        titulo.paragraph_format.alignment = WD_ALIGN_PARAGRAPH.CENTER
        titulo.paragraph_format.line_spacing = 1.50
        texto = f"""{textoTitulo} {anexo}"""
        r = titulo.add_run(texto)
        r.font.name = 'Arial'
        r.font.size = Pt(12)
        r.bold = True
    
    def criaRodape (self, textoRodape, data):  # não foi usado.

        section = self.document.sections[0]
        footer = section.footer
        # footer = section.first_page_footer  # não foi usado.

        footer_p = footer.paragraphs[0]
        footer_p.text = f"{textoRodape}\n{data}"
        footer_p.alignment = 1
        footer_p_styles = self.document.styles["Footer"]
        footer_p_styles.font.name = 'Arial'
        footer_p_styles.font.size = Pt(12)

    
    def addNovaSection(self):  # não foi usado.
        newSection = self.document.add_section(WD_SECTION.NEW_PAGE)
        newSection.different_first_page_header_footer = True




TESTE DE ENTRADA DE DADOS

celula = 'CAIXA1'
entidade = 'ENTIDADE 2'
endereco = 'ENDERECO 2'
potMedia = 0
potBefore = 0
potAfter = 0

dadosDict = preencheDict.fillDict(dadosDict, celula, entidade, endereco, potMedia, potBefore, potAfter)
# print(dadosDict)

celula = 'CAIXA2'
entidade = 'ENTIDADE 1'
endereco = 'ENDERECO 1'
potMedia = 0
potBefore = 0
potAfter = 0

dadosDict = preencheDict.fillDict(dadosDict, celula, entidade, endereco, potMedia, potBefore, potAfter)
# print(dadosDict)

celula = 'CAIXA2'
entidade = 'ENTIDADE 2'
endereco = 'ENDERECO 2'
potMedia = 0
potBefore = 0
potAfter = 0

dadosDict = preencheDict.fillDict(dadosDict, celula, entidade, endereco, potMedia, potBefore, potAfter)
print(dadosDict)


    def imprimeMarcadorEndereco(self, dado, p, fonte, negrito, italico, tam):
        
        i=0
        # p.paragraph_format.left_indent = Inches(0.5)
        # f.left_indent = Inches(0.5)
        # p.style = 'List Bullet'

        for entidadeSuiperior in dado.keys():  # Lembre-se de criar um método para tratar os loops
            for entidadeInferior in dado[entidadeSuiperior].keys():
                # t = p.add_run(f'Endereço {i+1}: ')
                # s = p.add_run(f'{dado[entidadeSuiperior][entidadeInferior][0]}; \n')
                # estilos.addStyles(t, fonte, negrito1, italico, tam)
                # estilos.addStyles(s, fonte, negrito2, italico, tam)
                # CriaTexto(self.document).textoFormat(p, 0, 1.50, 0, 0)
                # p.style = 'List Bullet'
                CriaTexto(self.document).addMarcadores(f'Endereço {i+1}: {dado[entidadeSuiperior][entidadeInferior][0]}', fonte, 0, negrito, italico, tam)
                i += 1